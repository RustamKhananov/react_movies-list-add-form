{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","title_InputValue","isValid_title_InputValue","description_InputValue","isValid_description_InputValue","imgUrl_InputValue","isValid_imgUrl_InputValue","imdbUrl_InputValue","isValid_imdbUrl_InputValue","imdbId_InputValue","isValid_imdbId_InputValue","fields","inputValidation","name","value","test","handleFieldChange","event","setState","target","handleFormSubmit","preventDefault","props","addMovie","onSubmit","this","field","htmlFor","toUpperCase","slice","onFocus","style","outline","border","type","onChange","color","fontSize","visibility","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a4318b9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title_InputValue: '',\n    isValid_title_InputValue: true,\n    description_InputValue: '',\n    isValid_description_InputValue: true,\n    imgUrl_InputValue: '',\n    isValid_imgUrl_InputValue: true,\n    imdbUrl_InputValue: '',\n    isValid_imdbUrl_InputValue: true,\n    imdbId_InputValue: '',\n    isValid_imdbId_InputValue: true,\n\n  };\n\n  fields = [\n    'title',\n    'description',\n    'imgUrl',\n    'imdbUrl',\n    'imdbId',\n  ]\n\n  inputValidation = (name, value) => {\n    switch (name) {\n      case 'imdbId':\n      case 'title':\n      case 'description':\n        return value !== '';\n      case 'imgUrl':\n      case 'imdbUrl':\n        // eslint-disable-next-line\n          return /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/.test(value);\n      default: return true;\n    }\n  }\n\n  handleFieldChange = (event) => {\n    this.setState({\n      [`${event.target.name}_InputValue`]:\n        event.target.value,\n      [`isValid_${event.target.name}_InputValue`]:\n        this.inputValidation(event.target.name, event.target.value),\n\n    });\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.title_InputValue === '') {\n      this.setState({\n        isValid_title_InputValue: false,\n      });\n\n      return;\n    }\n\n    if (this.state.description_InputValue === '') {\n      this.setState({\n        isValid_description_InputValue: false,\n      });\n\n      return;\n    }\n\n    if (this.state.imgUrl_InputValue === '') {\n      this.setState({\n        isValid_imgUrl_InputValue: false,\n      });\n\n      return;\n    }\n\n    if (this.state.imdbUrl_InputValue === '') {\n      this.setState({\n        isValid_imdbUrl_InputValue: false,\n      });\n\n      return;\n    }\n\n    if (this.state.imdbId_InputValue === '') {\n      this.setState({\n        isValid_imdbId_InputValue: false,\n      });\n\n      return;\n    }\n\n    const movie = {\n      title: this.state.title_InputValue,\n      description: this.state.description_InputValue,\n      imgUrl: this.state.imgUrl_InputValue,\n      imdbUrl: this.state.imdbUrl_InputValue,\n      imdbId: this.state.imdbId_InputValue,\n    };\n\n    this.props.addMovie(movie);\n\n    this.setState({\n      title_InputValue: '',\n      isValid_title_InputValue: true,\n      description_InputValue: '',\n      isValid_description_InputValue: true,\n      imgUrl_InputValue: '',\n      isValid_imgUrl_InputValue: true,\n      imdbUrl_InputValue: '',\n      isValid_imdbUrl_InputValue: true,\n      imdbId_InputValue: '',\n      isValid_imdbId_InputValue: true,\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleFormSubmit}>\n        <fieldset>\n          {this.fields.map(field => (\n            <Fragment key={field}>\n              <label htmlFor={field}>\n                {`${field[0].toUpperCase() + field.slice(1)}  `}\n                <br />\n                <input\n                  onFocus={this.handleFieldChange}\n                  style={{\n                    outline: 'none',\n                    border: `1px solid ${(\n                      this.state[`isValid_${field}_InputValue`])\n                      ? 'black' : 'red'}`,\n                  }}\n                  key={field}\n                  type=\"text\"\n                  name={field}\n                  value={this.state[`${field}_InputValue`]}\n                  onChange={this.handleFieldChange}\n                />\n              </label>\n              <p\n                style={{\n                  color: 'red',\n                  fontSize: '10px',\n                  visibility: `${(this.state[`isValid_${field}_InputValue`])\n                    ? 'hidden' : 'visible'}`,\n                }}\n              >\n                Not valid data\n              </p>\n            </Fragment>\n          ))}\n\n        </fieldset>\n        <br />\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n\nexport default NewMovie;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}