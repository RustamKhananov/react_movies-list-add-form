{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","isValidTitle","isValidDescription","isValidImgUrl","isValidImdbUrl","isValidImdbId","fields","inputValidation","name","value","trim","test","handleFieldChange","event","target","setState","toUpperCase","slice","handleFormSubmit","preventDefault","props","addMovie","onSubmit","this","field","fieldCapitalised","htmlFor","onBlur","type","onChange","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77ec6d8e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    isValidTitle: true,\n    description: '',\n    isValidDescription: true,\n    imgUrl: '',\n    isValidImgUrl: true,\n    imdbUrl: '',\n    isValidImdbUrl: true,\n    imdbId: '',\n    isValidImdbId: true,\n\n  };\n\n  fields = [\n    'title',\n    'description',\n    'imgUrl',\n    'imdbUrl',\n    'imdbId',\n  ]\n\n  inputValidation = (name, value) => {\n    switch (name) {\n      case 'imdbId':\n      case 'title':\n      case 'description':\n        return value.trim() !== '';\n      case 'imgUrl':\n      case 'imdbUrl':\n        // eslint-disable-next-line\n        return /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/.test(value);\n      default: return true;\n    }\n  }\n\n  handleFieldChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n      [`isValid${name[0].toUpperCase() + name.slice(1)}`]:\n        this.inputValidation(name, value),\n\n    });\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.title.trim() === '') {\n      this.setState({\n        isValidTitle: false,\n      });\n\n      return;\n    }\n\n    if (this.state.description.trim() === '') {\n      this.setState({\n        isValidDescription: false,\n      });\n\n      return;\n    }\n\n    if (this.state.imgUrl.trim() === '') {\n      this.setState({\n        isValidImgUrl: false,\n      });\n\n      return;\n    }\n\n    if (this.state.imdbUrl.trim() === '') {\n      this.setState({\n        isValidImdbUrl: false,\n      });\n\n      return;\n    }\n\n    if (this.state.imdbId.trim() === '') {\n      this.setState({\n        isValidImdbId: false,\n      });\n\n      return;\n    }\n\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    this.props.addMovie({\n      title, description, imgUrl, imdbUrl, imdbId,\n    });\n\n    this.setState({\n      title: '',\n      isValidTitle: true,\n      description: '',\n      isValidDescription: true,\n      imgUrl: '',\n      isValidImgUrl: true,\n      imdbUrl: '',\n      isValidImdbUrl: true,\n      imdbId: '',\n      isValidImdbId: true,\n    });\n  }\n\n  render() {\n    return (\n      <form className=\"new-movie\" onSubmit={this.handleFormSubmit}>\n        <fieldset>\n          {this.fields.map((field) => {\n            const fieldCapitalised = field[0].toUpperCase() + field.slice(1);\n\n            return (\n              <Fragment key={field}>\n                <label htmlFor={field}>\n                  {`${fieldCapitalised}  `}\n                  <br />\n                  <input\n                    className={`new-movie__field${\n                      (this.state[`isValid${fieldCapitalised}`])\n                        ? ''\n                        : ' new-movie__field--non-valid'\n                    }`}\n                    onBlur={this.handleFieldChange}\n                    key={field}\n                    type=\"text\"\n                    name={field}\n                    value={this.state[field]}\n                    onChange={this.handleFieldChange}\n                  />\n                </label>\n                <p\n                  className={\n                    `new-movie__error${\n                      (this.state[`isValid${fieldCapitalised}`])\n                        ? ''\n                        : ' new-movie__error--visible'\n                    }`}\n                >\n                  Not valid data\n                </p>\n              </Fragment>\n            );\n          })}\n\n        </fieldset>\n        <br />\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n\nexport default NewMovie;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}